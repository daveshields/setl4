-include "setl4.sbl"

* Sieve of Eratosthenes

	define('sieve(n)bound,pi,prime')	:(sieve.end)

sieve

	sieve = sequence.integers(n)
	bound = square.root(n)
	pi = 1

sieve.next

	prime = sequence.get(sieve,pi = pi + 1) 	:f(sieve.done)
	gt(prime,bound)				:s(sieve.done)
	
	sieve = sieve % 'and(gt(element,prime),eq(remdr(element,prime)))'
	show(sieve)				:(sieve.next)

sieve.done

	output = 'primes less than or equal to ' n
	show(sieve)				:(return)

sieve.end

	sieve(100)

end



