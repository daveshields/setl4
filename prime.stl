        define('prime(n)')                              :(prime.end)

*       Tests if _n_ is a prime.

prime

        divisors = int.new(2,square.root(n))
        prime = !exists(int.new(2,int.square.root(n)), 'multiple(n,this))
        prime = !exists(
.               int.new(2,int.square.root(n)) 
.               @ 
.               'multiple(n,this)')
        prime = forall(divisors,multiple(n,this(divisors)))  :(return)

prime.end

        output = 'start test'
        test = int.new(2,n)
        loop(test)
loop
        this = next(test)                               :f(end)
        output = prime(this) this                       :(loop)
end

        define('prime(n)')                              :(prime.end)

*       Tests if _n_ is a prime.

prime

        divisors = int.new(2,square.root(n))
        prime = forall(divisors,!divides(n,this(divisors)))  :(return)

prime.end

        output = 'start test'
        test = int.new(2,n)
        loop(test)
loop
        this = next(test)                               :f(end)
        output = prime(this) this                       :(loop)
end

