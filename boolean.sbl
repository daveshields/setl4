*       Copyright 2017, David Shields
*       Licensed under the MIT license.

*       This file extends SPITBOL by adding support for booleans and operations
*       on booleans.


*       Boolean Logic
*       -------------

*       Boolean logic is a form of algebra with just two values: true and false.

*       In SPITBOL, the algebra is defined on strings: the null string is "false"
*       and all other strings are "true."
*       IDENT is used to test for false, DIFFER for true. Both signal their
*       results by success (true) or failure (false).

*       In PLAYBOL, the algebra is defined on the integers: zero is "false"
*       and all integers are "true."
*       _eq_ is used to test for false, _ne_ for true.


        false = 0
        true = 1

        define('false(e)')                              :(false.end)

*       Returns true if its argument is false, or false if the argument is true.

false

        false = (eq(e) true, false)                     :(return)

false.end

        define('true(e)')                              :(true.end)

*       Returns true if its argument is true, or false if the argument is false.

true

        true = e					:(return)

true.end

        define('and(b1,b2,b3,b4,b5,b6)')                :(and.end)

*       Returns true iff (if and only if) all the non-null arguments are true.
*       And returns after encountering the first argument that is null or false.
*       or on encountering a null argument.

and

        and = ident(b1)                                 :s(return)
        and = false(b1) false                           :s(return)

        and = ident(b2)                                 :s(return)
        and = false(b2) false                           :s(return)

        and = ident(b3)                                 :s(return)
        and = false(b3) false                           :s(return)

        and = ident(b4)                                 :s(return)
        and = false(b4) false                           :s(return)

        and = ident(b5)                                 :s(return)
        and = false(b5) false                           :s(return)

        and = ident(b6)                                 :s(return)
        and = false(b6) false                           :s(return)
        
        and = true                                      :(return)

and.end

        define('or(b1,b2,b3,b4,b5,b6)')                 :(or.end)

*       Returns true iff (if and only if) at least one non-null argument is true.
*       Or returns after encountering an argument that is true or null.
*       or on encountering a null argument.

or

        ident(b1)                                       :s(return)
        or = true(b1) true                              :s(return)

        ident(b2)                                       :s(return)
        or = true(b2) true                              :s(return)

        ident(b3)                                       :s(return)
        or = true(b3) true                              :s(return)

        ident(b4)                                       :s(return)
        or = true(b4) true                              :s(return)

        ident(b5)                                       :s(return)
        or = true(b5) true                              :s(return)

        ident(b6)                                       :s(return)
        or = true(b6) true                              :s(return)
           
        or = false                                       :(return)

or.end

